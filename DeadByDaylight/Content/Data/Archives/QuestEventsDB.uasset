Asset: DataTable QuestEventsDB
{
    RowStruct: ScriptStruct /Script/DeadByDaylight.QuestEventDefinition
}

Row QuestEvent.AddItemToMap:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.AddItemToMap
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.AddItemToMap
}

Row QuestEvent.Blind:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBlinded
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Blind
}

Row QuestEvent.BlindCarry:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBlinded
        }
    ]
    QuestEventEvaluator: /Script/Archives.SlasherIsCarryingQEEvaluator
    Id: QuestEvent.BlindCarry
}

Row QuestEvent.BreakGenSame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DamageGenerator
        }
    ]
    QuestEventEvaluator: /Script/Archives.MaxSameTargetQEEvaluator
    Id: QuestEvent.BreakGenSame
}

Row QuestEvent.BreakGens:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DamageGenerator
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BreakGens
}

Row QuestEvent.BreakPallets:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DestroyPallet
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BreakPallets
}

Row QuestEvent.BreakPalletsGens:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DestroyPallet
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.DamageGenerator
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BreakPalletsGens
}

Row QuestEvent.Chase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Chase.PerSecond
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueQEEvaluator
    Id: QuestEvent.Chase
}

Row QuestEvent.CleanseDullFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Dull
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CleanseDullFinish
}

Row QuestEvent.CleanseFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Dull
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Hex
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CleanseFinish
}

Row QuestEvent.CleanseHexFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Hex
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CleanseHexFinish
}

Row QuestEvent.ChaseStart:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ChaseStart
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ChaseStart
}

Row QuestEvent.ChaseStartDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ChaseStart
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.ChaseStartDifferent
}

Row QuestEvent.CloseHatch:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.CloseHatch
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CloseHatch
}

Row QuestEvent.ConsumeItem:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.ItemConsumedQEEvaluator
    Id: QuestEvent.ConsumeItem
}

Row QuestEvent.Crow:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScareACrow
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueQEEvaluator
    Id: QuestEvent.Crow
}

Row QuestEvent.DoctorInflictMadnessDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.DoctorInflictMadnessDifferent
}

Row QuestEvent.DoctorInflictMadness:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.DoctorInflictMadness
}

Row QuestEvent.DoctorInflictMadness1:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InflictMadness1QuestEvaluator.InflictMadness1QuestEvaluator_C
    Id: QuestEvent.DoctorInflictMadness1
}

Row QuestEvent.DoctorInflictMadness2:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InflictMadness2QuestEvaluator.InflictMadness2QuestEvaluator_C
    Id: QuestEvent.DoctorInflictMadness2
}

Row QuestEvent.DoctorInflictMadness3:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InflictMadness3QuestEvaluator.InflictMadness3QuestEvaluator_C
    Id: QuestEvent.DoctorInflictMadness3
}

Row QuestEvent.Down:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperKO
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Down
}

Row QuestEvent.DownSucessively:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperKO
        }
    ]
    QuestEventEvaluator: /Script/Archives.EventInTimeQEEvaluator
    Id: QuestEvent.DownSucessively
}

Row QuestEvent.EarnBloodpoints:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.BloodPointsQEEvaluator
    Id: QuestEvent.EarnBloodpoints
}

Row QuestEvent.EarnEmblemsQuality:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.EarnEmblemQualityQEEvaluator
    Id: QuestEvent.EarnEmblemsQuality
}

Row QuestEvent.EscapeAfterBeingOnDeathHook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Escape
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorHookCountQEEvaluator
    Id: QuestEvent.EscapeAfterBeingOnDeathHook
}

Row QuestEvent.Escape:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Escape
}

Row QuestEvent.EscapeChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeChase
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.EscapeChase
}

Row QuestEvent.EscapeGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape.ThroughExitGate
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.EscapeGate
}

Row QuestEvent.EscapeHatch:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeThroughHatch
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.EscapeHatch
}

Row QuestEvent.EscapeWithoutHooked:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape
        }
    ]
    QuestEventEvaluator: /Script/Archives.DoBeforeHookQEEvaluator
    Id: QuestEvent.EscapeWithoutHooked
}

Row QuestEvent.Fall:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.LandFromFalling
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/FallQuestEvaluator.FallQuestEvaluator_C
    Id: QuestEvent.Fall
}

Row QuestEvent.FallInChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.LandFromFalling
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/FallInChaseQuestEvaluator.FallInChaseQuestEvaluator_C
    Id: QuestEvent.FallInChase
}

Row QuestEvent.FinishedPlaying:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.FinishedPlaying
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.FinishedPlaying
}

Row QuestEvent.Grab:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherInterruption
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Grab
}

Row QuestEvent.GrabLocker:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Interrupt.Hide
        }
        , 
        {
            TagName: GameEvent.PlayerExitCloset.FoundBySlasher
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.GrabLocker
}

Row QuestEvent.HatchKey:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.UnlockHatch
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HatchKey
}

Row QuestEvent.Heal:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.HealPercent
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.MedkitHealPercent
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.SelfHealPercent
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.Heal
}

Row QuestEvent.HealAfterGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.HealPercent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HealAfterGate
}

Row QuestEvent.HealFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.HealFromDying
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HealFinish
}

Row QuestEvent.HealFinishAfterGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromDying
        }
        , 
        {
            TagName: GameEvent.HealFromInjured
        }
    ]
    QuestEventEvaluator: /Script/Archives.AfterExitOpenQEEvaluator
    Id: QuestEvent.HealFinishAfterGate
}

Row QuestEvent.HealMedkitFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.HealFromDying
        }
    ]
    QuestEventEvaluator: /Script/Archives.ItemPerformedQEEvaluator
    Id: QuestEvent.HealMedkitFinish
}

Row QuestEvent.HealSelfUsingSolidarity:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Heal.WithPerk.Solidarity
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HealSelfUsingSolidarity
}

Row QuestEvent.HealSelf:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SelfHealPercent
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.HealSelf
}

Row QuestEvent.HideInLockerNearKiller:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.InLockerNearKillerQEEvaluator
    Id: QuestEvent.HideInLockerNearKiller
}

Row QuestEvent.HideNearKiller:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.HideNearKillerQEEvaluator
    Id: QuestEvent.HideNearKiller
}

Row QuestEvent.HitExposed:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.AttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetIsExposed_QuestEvaluator.TargetIsExposed_QuestEvaluator_C
    Id: QuestEvent.HitExposed
}

Row QuestEvent.Hit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.AttackSuccess
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Hit
}

Row QuestEvent.Hook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Hook
}

Row QuestEvent.HookBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetInBasementQEEvaluator
    Id: QuestEvent.HookBasement
}

Row QuestEvent.HookDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.HookDifferent
}

Row QuestEvent.HookMultiple:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.SurvivorHookSameTimeQEEvaluator
    Id: QuestEvent.HookMultiple
}

Row QuestEvent.HookMultipleBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.HookSameTimeBasementQEEvaluator
    Id: QuestEvent.HookMultipleBasement
}

Row QuestEvent.HookObsession:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetIsObsessionQEEvaluator
    Id: QuestEvent.HookObsession
}

Row QuestEvent.Kill:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Kill
        }
        , 
        {
            TagName: GameEvent.HookedCamperSacrificeBegin
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.KillWithReverseBearTrap
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.EntitySacrificeAtEnd
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Kill
}

Row QuestEvent.KillObsession:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Kill
        }
        , 
        {
            TagName: GameEvent.HookedCamperSacrificeBegin
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.KillWithReverseBearTrap
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetIsObsessionQEEvaluator
    Id: QuestEvent.KillObsession
}

Row QuestEvent.LivingAtEndTrial:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.LivingSurvivorsCountQEEvaluator
    Id: QuestEvent.LivingAtEndTrial
}

Row QuestEvent.MissInRange:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherAttackMissed
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/EventNearMeQuestEvaluator.EventNearMeQuestEvaluator_C
    Id: QuestEvent.MissInRange
}

Row QuestEvent.MissInRangeDuringDeadHard:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherAttackMissed
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/NearMeEvent_RecentDeadHard_QuestEvaluator.NearMeEvent_RecentDeadHard_QuestEvaluator_C
    Id: QuestEvent.MissInRangeDuringDeadHard
}

Row QuestEvent.MissInRangeAndEnterLocker:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherAttackMissed
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/NearMeEvent_EnterLocker_QuestEvaluator.NearMeEvent_EnterLocker_QuestEvaluator_C
    Id: QuestEvent.MissInRangeAndEnterLocker
}

Row QuestEvent.MissInRangeAndVault:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherAttackMissed
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/NearMeEvent_RecentVault_QuestEvaluator.NearMeEvent_RecentVault_QuestEvaluator_C
    Id: QuestEvent.MissInRangeAndVault
}

Row QuestEvent.Mori:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Kill
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Mori
}

Row QuestEvent.MoriObsession:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Kill
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetIsObsessionQEEvaluator
    Id: QuestEvent.MoriObsession
}

Row QuestEvent.OpenExitGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ExitGateOpened
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.OpenExitGate
}

Row QuestEvent.PalletDrop:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Pallet.Drop
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PalletDrop
}

Row QuestEvent.PalletDropInChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Pallet.Drop.InChase
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PalletDropInChase
}

Row QuestEvent.PalletStun:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Player.StunSlasher.WithPallet
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PalletStun
}

Row QuestEvent.ProtectionHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.HitNearFriendInNeed
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.HitNearUnhookedFriendInNeed
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ProtectionHit
}

Row QuestEvent.Repair:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.GeneratorPercent
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.Repair
}

Row QuestEvent.RepairFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Generator.RepairFinish
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.RepairFinish
}

Row QuestEvent.RepairInTerrorRadius:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Generator.RepairFinish
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorInTerrorRadiusQuestEvaluator.InstigatorInTerrorRadiusQuestEvaluator_C
    Id: QuestEvent.RepairInTerrorRadius
}

Row QuestEvent.SabotageFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SabotageHook.Complete
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SabotageFinish
}

Row QuestEvent.Sacrifice:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.SacrificeSurvivor
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.EntitySacrificeAtEnd
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Sacrifice
}

Row QuestEvent.SacrificeBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HookedCamperSacrificeBegin
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetInBasementQEEvaluator
    Id: QuestEvent.SacrificeBasement
}

Row QuestEvent.SaveSurvivorWhileOnDeathHook:
{
    TrackedGameEvents: [
        {
            TagName: GameplayModifierType.ScoreModifier.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorHookCountQEEvaluator
    Id: QuestEvent.SaveSurvivorWhileOnDeathHook
}

Row QuestEvent.SacrificeEndgame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.EntitySacrificeAtEnd
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.SacrificeSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.DuringEndGameCollapseQEEvaluator
    Id: QuestEvent.SacrificeEndgame
}

Row QuestEvent.Scream:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Scream
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Scream
}

Row QuestEvent.Search:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SearchablePercent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Search
}

Row QuestEvent.SearchBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SearchablePercent
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorInBasementPercentQEEvaluator
    Id: QuestEvent.SearchBasement
}

Row QuestEvent.SearchBasementFinish:
{
    TrackedGameEvents: [
        {
            TagName: None
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SearchBasementFinish
}

Row QuestEvent.SearchFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SearchableCompleteContributionPercent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SearchFinish
}

Row QuestEvent.SkillCheckConsecutive:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.SkillCheckConsecutiveQEEvaluator
    Id: QuestEvent.SkillCheckConsecutive
}

Row QuestEvent.SkillCheckGreatSuccess:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SkillCheck.Success.Bonus
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SkillCheckGreatSuccess
}

Row QuestEvent.SkillCheckSuccess:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SkillCheck.Success
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SkillCheckSuccess
}

Row QuestEvent.SpiritGrabHitPostPhase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.GrabSurvivorPostActivePhaseWalk
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.HitSurvivorPostActivePhaseWalk
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SpiritGrabHitPostPhase
}

Row QuestEvent.SpiritGrabPostPhase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.GrabSurvivorPostActivePhaseWalk
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SpiritGrabPostPhase
}

Row QuestEvent.SpiritHitPostPhase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HitSurvivorPostActivePhaseWalk
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SpiritHitPostPhase
}

Row QuestEvent.SpiritStartChasePostPhase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ChaseStart
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/StartChasePostPhaseQuestEvaluator.StartChasePostPhaseQuestEvaluator_C
    Id: QuestEvent.SpiritStartChasePostPhase
}

Row QuestEvent.Stun:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.StunSlasher
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Stun
}

Row QuestEvent.StunKillerWithHeadOn:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.StunSlasher.WithAbility.HeadOn
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.StunKillerWithHeadOn
}

Row QuestEvent.StunSucessively:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.StunSlasher
        }
    ]
    QuestEventEvaluator: /Script/Archives.EventInTimeQEEvaluator
    Id: QuestEvent.StunSucessively
}

Row QuestEvent.Test:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.GeneratorPercent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Test
}

Row QuestEvent.TrapperCatch:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.TrapSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.TrapperCatch
}

Row QuestEvent.TrapperCatchDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.TrapSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.TrapperCatchDifferent
}

Row QuestEvent.Unhook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Unhook
}

Row QuestEvent.UnhookAfterExitGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.AfterExitOpenQEEvaluator
    Id: QuestEvent.UnhookAfterExitGate
}

Row QuestEvent.UnhookBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorInBasementQEEvaluator
    Id: QuestEvent.UnhookBasement
}

Row QuestEvent.UnhookEndgame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.DuringEndGameCollapseQEEvaluator
    Id: QuestEvent.UnhookEndgame
}

Row QuestEvent.UnhookProtectionHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.HitNearUnhookedFriendInNeed
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.HitNearFriendInNeed
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.UnhookProtectionHit
}

Row QuestEvent.UnhookUnsafe:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperWasUnhooked
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.UnhookUnsafe
}

Row QuestEvent.UnhookWhoUnhooked:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperWasUnhooked
        }
    ]
    QuestEventEvaluator: /Script/Archives.ReturnTheFavorQEEvaluator
    Id: QuestEvent.UnhookWhoUnhooked
}

Row QuestEvent.UnitTest:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ChaseStart
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.UnitTest
}

Row QuestEvent.Vault:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Vault
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Vault
}

Row QuestEvent.VaultInChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Vault.InChase
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.VaultInChase
}

Row QuestEvent.WiggleFree:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.EscapeCarry.ByWiggle
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.WiggleFree
}
